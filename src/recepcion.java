
//import com.qoppa.pdfViewer.PDFViewerBean;
import com.qoppa.pdf.PDFException;
import com.qoppa.pdf.PrintSettings;
import com.qoppa.pdfViewer.PDFViewerBean;
import javax.swing.JFrame;
import util.calendario;
import util.reloj;
import farmacia.conectar;
import farmacia.expediente;
import farmacia.remision;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.DefaultListModel;
import flujos.read;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JLabel;
import java.awt.color.*;
import java.awt.print.PrinterException;
import javax.swing.table.DefaultTableModel;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author NaMYY
 */
public class recepcion extends javax.swing.JPanel {

    private final JFrame anfitrion;
    private final JFrame actual;
    private final int idRecepcionista;
    private calendario c;
    private reloj r;
    private ComboBoxModel horarios;
    private DefaultListModel pacientes = new DefaultListModel();
    private DefaultTableModel busqueda = new DefaultTableModel();
    private DefaultTableModel citas = new DefaultTableModel();
    private ResultSet dates;
    private PDFViewerBean prevent = new PDFViewerBean();
    /**
     * Creates new form recepcion
     * @param anfitrion
     * @param actual
     * @param idRecepcionista
     * @throws java.sql.SQLException
     */
    public recepcion(JFrame anfitrion, JFrame actual, int idRecepcionista) throws SQLException{
        this.anfitrion = anfitrion;
        this.idRecepcionista = idRecepcionista;
        this.actual = actual;
        r = new reloj(0,0,150,50);
        
        
        initComponents();
        c = new calendario(r.calendario,jLabel11, jTextField1, jTextField2, jTextField3, jComboBox1);
        jPanel1.add(r);
        jPanel8.add(c);
        c.setBounds(0,0, 551, 259);
        c.setVisible(true);
        conectar con = new conectar();
        Connection cnn = con.conect();
        Statement stmt = cnn.createStatement();
        ResultSet rs = stmt.executeQuery("Select nombre from recepcionista where idUsuario = " + idRecepcionista);
        if(rs.next()){
            jLabel1.setText(rs.getString("nombre"));
        }
        rs = stmt.executeQuery("select idConsultorio, inicio, fin from horario order by idConsultorio, inicio");
        while(rs.next()){
            jComboBox1.addItem("Consultorio: "+rs.getString("idConsultorio")+" | " + rs.getString("inicio").substring(0,5) + " - " + rs.getString("fin").substring(0,5));
        }
        rs = stmt.executeQuery("select nombre, curp from paciente");
        while(rs.next()){
            pacientes.addElement(rs.getString("curp") + "-" + rs.getString("nombre"));
        }
        rs.close();
        cnn.close();
        jLabel2.setText(r.dia + " / " + (Integer.parseInt(r.mes) + 1) + " / " + r.a√±o);
        jRadioButton1.setSelected(true);
        citas.addColumn("Nombre");
        citas.addColumn("Curp");
        citas.addColumn("Consultorio");
        citas.addColumn("Horario");
        citas.addColumn("Pago");
        busqueda.addColumn("Nombre");
        busqueda.addColumn("Curp");
        busqueda.addColumn("Consultorio");
        busqueda.addColumn("Horario");
        busqueda.addColumn("Pago");
        jTable1.setModel(citas);
        actualizacion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jTextField6 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel28 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Calendario");

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setEnabled(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 551, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 259, Short.MAX_VALUE)
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Agendar cita");

        jTextField1.setText("-");
        jTextField1.setEnabled(false);

        jTextField2.setText("-");
        jTextField2.setEnabled(false);

        jTextField3.setText("-");
        jTextField3.setEnabled(false);

        jLabel8.setText("Horario:");

        jButton2.setText("Agendar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Informacion");

        jLabel11.setText("-- / -- / --");
        jLabel11.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jLabel11PropertyChange(evt);
            }
        });

        jButton3.setText("Siguiente mes >>");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("<< Mes anterior");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel10.setText("/");

        jLabel12.setText("/");

        jRadioButton1.setText("Agendar por nombre:");
        jRadioButton1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButton1StateChanged(evt);
            }
        });

        jRadioButton2.setText("Agendar por curp:");
        jRadioButton2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButton2StateChanged(evt);
            }
        });

        jLabel5.setText("Porcentage de ocupacion: ");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Horarios ocupados \\n lol");
        jScrollPane1.setViewportView(jLabel6);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton1)
                                    .addComponent(jRadioButton2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField4)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(94, 94, 94)
                                .addComponent(jLabel11))
                            .addComponent(jLabel5)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(95, 95, 95))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton1)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField6))
                        .addGap(33, 33, 33))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel11))
                                .addGap(26, 26, 26)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(15, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Calendario de citas", jPanel2);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Lista de citas de hoy");

        jButton6.setText("Buscar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel18.setText("Curp del paciente:");

        jButton14.setText("Agregar expediente");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Atender paciente");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton5.setText("Borrar seleccion");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane3.setViewportView(jTable1);

        jButton7.setText("Cancelar cita");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Agregar pago");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 854, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addGap(39, 39, 39))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7)
                .addGap(18, 18, 18)
                .addComponent(jButton15)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton15)
                    .addComponent(jButton7))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Citas de hoy", jPanel3);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Nuevo paciente:");

        jLabel23.setText("Nombre:");

        jLabel24.setText("Apellidos:");

        jLabel25.setText("Edad:");

        jLabel26.setText("Enfermedades cronicas:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        jLabel27.setText("Enfermedades familiares:");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane5.setViewportView(jTextArea2);

        jLabel28.setText("CURP:");

        jLabel29.setText("Direccion:");

        jButton10.setText("Finalizar");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel22))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel23)
                                            .addComponent(jLabel24)
                                            .addComponent(jLabel25)
                                            .addComponent(jLabel26)
                                            .addComponent(jLabel27))
                                        .addGap(42, 42, 42)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField9, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                            .addComponent(jTextField10)
                                            .addComponent(jTextField11))))
                                .addGap(80, 80, 80)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel28)
                                    .addComponent(jLabel29))
                                .addGap(71, 71, 71)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField12)
                                    .addComponent(jTextField13, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))))
                        .addGap(0, 147, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton10)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jButton10)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Nuevo paciente", jPanel5);

        jLabel1.setText("Nombre");

        jButton1.setText("Cerrar Sesion");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Fecha");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(278, 278, 278)
                        .addComponent(jButton1))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 986, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        anfitrion.setVisible(true);
        actual.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        c.sigiente();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        c.anterior();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String inicio, fin, fecha, consultorio, nombre, curp;
        if(jTextField1.getText().equals("-")){
            JOptionPane.showMessageDialog(this, "No has seleccionado una fecha");
        }else{
            if(jTextField4.getText().equals("") && jTextField6.getText().equals("")){
               JOptionPane.showMessageDialog(this, "No has escrito el nombre o curp del paciente");
            }else{
                if(jRadioButton1.isSelected() || jRadioButton2.isSelected()){
                    if(jRadioButton1.isSelected()){
                        try{
                            nombre = jTextField4.getText();
                            consultorio = util.compilador.consultorio(jComboBox1.getSelectedItem().toString());
                            inicio = util.compilador.inicio(jComboBox1.getSelectedItem().toString());
                            fin = util.compilador.fin(jComboBox1.getSelectedItem().toString());
                            fecha = c.selectedBase().replace("/", "-");
                            if(nombre.equals("") || nombre == null){
                                JOptionPane.showMessageDialog(this, "No has escrito un nombre");
                            }else{
                                Connection cnn = (new conectar()).conect();
                                Statement stmt = cnn.createStatement();
                                stmt.execute("insert into cita values(default, 0, (select idHorario from horario where inicio = '"+inicio+"' and fin = '"+fin+"' and idConsultorio = (select idConsultorio from consultorio where numero = "+consultorio+")), '"+fecha+"','"+nombre+"', 0, default)");
                                JOptionPane.showMessageDialog(this,"Cita agendada");
                                stmt.close();
                                cnn.close();
                            }
                            jTextField6.setText("");
                            jTextField4.setText("");
                            c.actualiza();
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(this,"Error al crear la cita");
                        }
                        actualizacion();
                    }else{
                        try{
                            curp = jTextField6.getText();
                            if(buscarExpediente(curp)){
                                consultorio = util.compilador.consultorio(jComboBox1.getSelectedItem().toString());
                                inicio = util.compilador.inicio(jComboBox1.getSelectedItem().toString());
                                fin = util.compilador.fin(jComboBox1.getSelectedItem().toString());
                                fecha = c.selectedBase().replace("/", "-");
                                Connection cnn = (new conectar()).conect();
                                Statement stmt = cnn.createStatement();
                                stmt.execute("insert into cita values(default, (select idPaciente from paciente where curp = '"+curp+"'), (select idHorario from horario where inicio = '"+inicio+"' and fin = '"+fin+"' and idConsultorio = (select idConsultorio from consultorio where numero = "+consultorio+")), '"+fecha+"', (select concat(nombre, ' ', apellidos) from paciente where curp = '"+curp+"'), default)");
                                JOptionPane.showMessageDialog(this,"Cita agendada");
                                jTextField4.setText("");
                                jTextField6.setText("");
                                c.actualiza();
                                stmt.close();
                                cnn.close();
                            }else{
                                JOptionPane.showMessageDialog(this, "Paciente no registrado");
                            }
                        }catch(Exception e){
                        }
                    }
                    actualizacion();
                }else{
                    JOptionPane.showMessageDialog(this,"No has seleccionado el criterio de cita");
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        String nombre, apellidos, cronico, familiar, curp, direccion;
        int edad;
        nombre = jTextField9.getText();
        apellidos = jTextField10.getText();
        edad = Integer.parseInt(jTextField11.getText());
        cronico = jTextArea1.getText();
        familiar = jTextArea2.getText();
        curp = jTextField12.getText();
        direccion = jTextField13.getText();
        if(nombre.equals("") || apellidos.equals("") || curp.equals("") || direccion.equals("") || jTextField11.getText().equals("")){
            JOptionPane.showMessageDialog(this, "No has llenado todos los campos necesarios");
        }else{
            try{
                conectar cn = new conectar();
                Connection cnn = cn.conect();
                Statement stmt = cnn.createStatement();
                stmt.execute("insert into paciente values(default, '"+nombre+"','"+apellidos+"',"+edad+",'"+curp+"','"+direccion+"','"+cronico+"','"+familiar+"')");
                jTextField9.setText("");
                jTextField10.setText("");
                jTextField11.setText("");
                jTextField12.setText("");
                jTextField13.setText("");
                jTextArea1.setText("");
                jTextArea2.setText("");
                JOptionPane.showMessageDialog(this, "Paciente registrado");
                pacientes.addElement(curp + " | " + nombre);
                expediente exp = new expediente();
                exp.crear(nombre, curp, direccion, edad, cronico, familiar);
                stmt.close();
                cnn.close();
            }catch(SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(this,"No se puede conectar a la base de datos");
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String bus = jTextField5.getText();
        int cont = busqueda.getRowCount();
        String row[] = new String[5];
        for(int i = 0; i < cont; i++){
            busqueda.removeRow(0);
        }
        for(int i = 0; i < citas.getRowCount(); i++){
            if(citas.getValueAt(i,0).toString().contains(bus) || citas.getValueAt(i,1).toString().contains(bus)){
                row[0] = citas.getValueAt(i,0).toString();
                row[1] = citas.getValueAt(i,1).toString();
                row[2] = citas.getValueAt(i,2).toString();
                row[3] = citas.getValueAt(i,3).toString();
                row[4] = citas.getValueAt(i,4).toString();
                busqueda.addRow(row);
            }
        }
        jTable1.setModel(busqueda);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jTable1.setModel(citas);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        String curp = jTextField8.getText();
        if(buscarExpediente(curp)){
            String nombre, consultorio, horario;
            if(jTable1.getSelectedRow() != -1){
                if(jTable1.getModel().equals(citas)){
                    nombre = citas.getValueAt(jTable1.getSelectedRow(), 0).toString();
                    consultorio = citas.getValueAt(jTable1.getSelectedRow(), 2).toString();
                    horario = citas.getValueAt(jTable1.getSelectedRow(), 3).toString();
                }else{
                    nombre = busqueda.getValueAt(jTable1.getSelectedRow(), 0).toString();
                    consultorio = busqueda.getValueAt(jTable1.getSelectedRow(), 2).toString();
                    horario = busqueda.getValueAt(jTable1.getSelectedRow(), 3).toString();
                }
                try{
                    Connection cnn = (new conectar()).conect();
                    Statement stmt = cnn.createStatement();
                    ResultSet rs = stmt.executeQuery("select c.idCita from cita c, horario h, paciente p, consultorio con where c.fecha = curdate() and c.activa = 0 and h.idHorario = c.idHorario and p.idPaciente = c.idPaciente and con.idConsultorio = h.idConsultorio and c.activa = 0 and concat(h.inicio, ' - ', h.fin) = '"+horario+"' and c.nombre = '"+nombre+"' and con.numero = " + consultorio);
                    if(rs.next()){
                        String cons = "update cita set nombre = concat((select nombre from paciente where curp = '"+curp+"'), ' ', (select apellidos from paciente where curp = '"+curp+"')), idPaciente = (select idPaciente from paciente where curp = '"+curp+"') where idCita = " + rs.getString("idCita");
                        stmt.execute(cons);
                        actualizacion();
                        jTable1.setModel(citas);
                        jTextField8.setText("");
                        JOptionPane.showMessageDialog(this, "Expediente agregado");
                    }else{
                        JOptionPane.showMessageDialog(this,"Error al buscar los datos de la cita");
                    }
                    rs.close();
                    stmt.close();
                    cnn.close();
                }catch(Exception e){
                    System.out.println(e);
                }
            }else{
                JOptionPane.showMessageDialog(this, "No has seleccionado una cita");
            }
        }else{
            JOptionPane.showMessageDialog(this, "No existe el expediente buscado");
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        String nombre, consultorio, horario, curp;
        if(jTable1.getSelectedRow() != -1){
            if(jTable1.getModel().equals(citas)){
                nombre = citas.getValueAt(jTable1.getSelectedRow(), 0).toString();
                curp = citas.getValueAt(jTable1.getSelectedRow(), 1).toString();
                consultorio = citas.getValueAt(jTable1.getSelectedRow(), 2).toString();
                horario = citas.getValueAt(jTable1.getSelectedRow(), 3).toString();
            }else{
                nombre = busqueda.getValueAt(jTable1.getSelectedRow(), 0).toString();
                curp = busqueda.getValueAt(jTable1.getSelectedRow(), 1).toString();
                consultorio = busqueda.getValueAt(jTable1.getSelectedRow(), 2).toString();
                horario = busqueda.getValueAt(jTable1.getSelectedRow(), 3).toString();
            }
            try{
                boolean temprano = false;
                boolean tarde = false;
                boolean cond = false;
                int idCita;
                Connection cnn = (new conectar()).conect();
                Statement stmt = cnn.createStatement();
                ResultSet rs = stmt.executeQuery("select c.idCita, c.pagada, h.inicio from cita c, horario h, paciente p, consultorio con where c.fecha = curdate() and c.activa = 0 and h.idHorario = c.idHorario and p.idPaciente = c.idPaciente and con.idConsultorio = h.idConsultorio and c.activa = 0 and concat(h.inicio, ' - ', h.fin) = '"+horario+"' and c.nombre = '"+nombre+"' and con.numero = " + consultorio);
                if(rs.next()){
                    if(rs.getString("pagada").equals("1")){
                        horario = rs.getString("inicio");
                        idCita = rs.getInt("idCita");
                        rs = stmt.executeQuery("select (((time('"+horario+"') - 1000) - curtime()) <= 0 and (time('"+horario+"') + 1000) - curtime() >= 0) as llegar, ((time('"+horario+"') - 1000) - curtime()) > 0 as temprano, ((time('"+horario+"') + 1000) - curtime() < 0) as tarde");
                        rs.next();
                        cond = rs.getBoolean("llegar");
                        temprano = rs.getBoolean("temprano");
                        tarde = rs.getBoolean("tarde");
                        if(cond){
                            stmt.execute("update cita set activa = 1 where idCita = " + idCita);
                            actualizacion();
                            jTable1.setModel(citas);
                            jTextField8.setText("");
                            remision rem = new remision();
                            rem.prevent(nombre, curp);
                            imprime();
                        }else{
                            if(temprano){
                                JOptionPane.showMessageDialog(this, "Aun es temprano para la cita");
                            }else if(tarde){
                                JOptionPane.showMessageDialog(this, "La cita ya ha pasado, solicite pago de multa");
                            }
                        }
                    }else{
                        JOptionPane.showMessageDialog(this,"No se ha pagado la cita");
                    }
                }else{
                    JOptionPane.showMessageDialog(this,"Error al buscar los datos de la cita");
                }
                rs.close();
                stmt.close();
                cnn.close();
            }catch(Exception e){
                System.out.println(e);
            }
        }else{
            JOptionPane.showMessageDialog(this, "No has seleccionado una cita");
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jRadioButton1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButton1StateChanged
        if(jRadioButton1.isSelected()){
            if(jRadioButton2.isSelected()){
                jRadioButton2.setSelected(false);
            }
        }else{
            if(!jRadioButton2.isSelected()){
                jRadioButton2.setSelected(true);
            }
        }
    }//GEN-LAST:event_jRadioButton1StateChanged

    private void jRadioButton2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButton2StateChanged
        if(jRadioButton2.isSelected()){
            if(jRadioButton1.isSelected()){
                jRadioButton1.setSelected(false);
            }
        }else{
            if(!jRadioButton1.isSelected()){
                jRadioButton1.setSelected(true);
            }
        }
    }//GEN-LAST:event_jRadioButton2StateChanged

    private void jLabel11PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jLabel11PropertyChange
        try{
            String asd;
            int consultorio = 0;
            Connection cnn = (new conectar()).conect();
            Statement stmt = cnn.createStatement();
            ResultSet rs = stmt.executeQuery("select concat(((select count(*) from cita where cita.fecha = '"+c.selectedBase()+"') / (select count(*) from horario)) * 100, ' %') as porcentage");
            if(rs.next()){
                jLabel5.setText("Porcentage de ocupacion: " + rs.getString("porcentage"));
            }
            rs = stmt.executeQuery("select cons.numero, h.inicio, h.fin, ifnull((select h.idHorario = c.idHorario from cita c where h.idHorario = c.idHorario and c.fecha = '"+c.selectedBase()+"'),0) as ocupado from horario h, consultorio cons where h.idConsultorio = cons.idConsultorio and h.idMedico != 0");
            asd = "<html><body>";
            while(rs.next()){
                if(rs.getInt("numero") != consultorio){
                    consultorio = rs.getInt("numero");
                    asd += "<p><big>Consultorio "+consultorio+"</big></p><br>";
                }
                if(rs.getBoolean("ocupado")){
                    asd += "<p style='text-align: center; color: #ffffff; background: #c10500; border-radius:3px; -moz-border-radius:3px; -webkit-border-radius:3px;'>" + rs.getString("inicio") + " - " + rs.getString("fin") + "</p><br>";
                }else{
                    asd += "<p style='text-align: center; color: #ffffff; background: #16ac00; border-radius:3px; -moz-border-radius:3px; -webkit-border-radius:3px;'>" + rs.getString("inicio") + " - " + rs.getString("fin") + "</p><br>";
                }
            }
            asd += "</body></html>";
            jLabel6.setText(asd);
            rs.close();
            stmt.close();
            cnn.close();
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_jLabel11PropertyChange

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if(jTable1.getSelectedRow() != -1){
            String nombre, consultorio, horario;
            if(jTable1.getModel().equals(citas)){
                nombre = citas.getValueAt(jTable1.getSelectedRow(), 0).toString();
                consultorio = citas.getValueAt(jTable1.getSelectedRow(), 2).toString();
                horario = citas.getValueAt(jTable1.getSelectedRow(), 3).toString();
            }else{
                nombre = busqueda.getValueAt(jTable1.getSelectedRow(), 0).toString();
                consultorio = busqueda.getValueAt(jTable1.getSelectedRow(), 2).toString();
                horario = busqueda.getValueAt(jTable1.getSelectedRow(), 3).toString();
            }
            try{
                Connection cnn = (new conectar()).conect();
                Statement stmt = cnn.createStatement();
                ResultSet rs = stmt.executeQuery("select c.idCita from cita c, horario h, paciente p, consultorio con where c.fecha = curdate() and c.activa = 0 and h.idHorario = c.idHorario and p.idPaciente = c.idPaciente and con.idConsultorio = h.idConsultorio and c.activa = 0 and concat(h.inicio, ' - ', h.fin) = '"+horario+"' and c.nombre = '"+nombre+"' and con.numero = " + consultorio);
                if(rs.next()){
                    stmt.execute("delete from cita where idCita = " + rs.getString("idCita"));
                    actualizacion();
                    jTable1.setModel(citas);
                    JOptionPane.showMessageDialog(this, "Cita cancelada");
                }else{
                    JOptionPane.showMessageDialog(this,"Error al buscar los datos de la cita");
                }
                rs.close();
                stmt.close();
                cnn.close();
            }catch(Exception e){
                System.out.println(e);
            }
        }else{
            JOptionPane.showMessageDialog(this, "No has seleccionado una cita a cancelar");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if(jTable1.getSelectedRow() != -1){
            String nombre, consultorio, horario;
            if(jTable1.getModel().equals(citas)){
                nombre = citas.getValueAt(jTable1.getSelectedRow(), 0).toString();
                consultorio = citas.getValueAt(jTable1.getSelectedRow(), 2).toString();
                horario = citas.getValueAt(jTable1.getSelectedRow(), 3).toString();
            }else{
                nombre = busqueda.getValueAt(jTable1.getSelectedRow(), 0).toString();
                consultorio = busqueda.getValueAt(jTable1.getSelectedRow(), 2).toString();
                horario = busqueda.getValueAt(jTable1.getSelectedRow(), 3).toString();
            }
            try{
                Connection cnn = (new conectar()).conect();
                Statement stmt = cnn.createStatement();
                ResultSet rs = stmt.executeQuery("select c.idCita from cita c, horario h, paciente p, consultorio con where c.fecha = curdate() and c.activa = 0 and h.idHorario = c.idHorario and p.idPaciente = c.idPaciente and con.idConsultorio = h.idConsultorio and c.activa = 0 and concat(h.inicio, ' - ', h.fin) = '"+horario+"' and c.nombre = '"+nombre+"' and con.numero = " + consultorio);
                if(rs.next()){
                    stmt.execute("update cita set pagada = 1 where idCita = " + rs.getString("idCita"));
                    actualizacion();
                    jTable1.setModel(citas);
                    JOptionPane.showMessageDialog(this, "Pago registrado");
                }else{
                    JOptionPane.showMessageDialog(this,"Error al buscar los datos de la cita");
                }
                rs.close();
                stmt.close();
                cnn.close();
            }catch(Exception e){
                System.out.println(e);
            }
        }else{
            JOptionPane.showMessageDialog(this, "No has seleccionado una cita a pagar");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private boolean buscarExpediente(String busqueda){
        String aux;
        read r = new read();
        r.abrir("expedientes.txt");
        while(true){
            aux = r.leer();
            if(aux.equals("")){
                r.cerrar();
                return false;
            }else{
                if(aux.equals(busqueda)){
                    r.cerrar();
                    return true;
                }
            }
        }
    }
    
    private void actualizacion(){
        try{
            int cont = citas.getRowCount();
            String ux;
            for(int i = 0; i < cont; i++){
                citas.removeRow(0);
            }
            String row[] = new String[5];
            Connection cnn = (new conectar()).conect();
            Statement stmt = cnn.createStatement();
            ResultSet rs = stmt.executeQuery("select concat(h.inicio, ' - ', h.fin) as horario, c.nombre, p.curp, con.numero as consultorio, c.pagada from cita c, horario h, paciente p, consultorio con where c.fecha = curdate() and c.activa = 0 and h.idHorario = c.idHorario and p.idPaciente = c.idPaciente and con.idConsultorio = h.idConsultorio and c.activa = 0 order by con.numero, h.inicio");
            while(rs.next()){
                row[0] = rs.getString("nombre");
                row[1] = rs.getString("curp");
                row[2] = rs.getString("consultorio");
                row[3] = rs.getString("horario");
                ux = rs.getString("pagada");
                if(ux.equals("1")){
                    row[4] = "Pagada";
                }else{
                    row[4] = "Sin pagar";
                }
                citas.addRow(row);
            }
            rs.close();
            stmt.close();
            cnn.close();
        }catch(Exception e){
            
        }
        if(jLabel11.getText().contains(" ")){
            jLabel11.setText(jLabel11.getText().replace(" ", ""));
        }else{
            jLabel11.setText(jLabel11.getText() + " ");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    private void imprime() {
        try{
            Thread.sleep(1000);
            prevent.loadPDF("mPrev.pdf");
            PrintSettings p = new PrintSettings();
            p.m_AutoRotate = true;
            p.m_CenterInPage = true;
            p.m_ExpandToMargins = true;
            p.m_PrintAnnotations = true;
            p.m_QoppaDialog = true;
            p.m_ShrinkToMargins = true;
            prevent.print(p);
            prevent.clearDocument();
            p = null;
            prevent = null;
            try {
                Runtime.getRuntime().exec("red.bat");
            } catch (Exception ioe) {

            }
        } catch (PDFException | PrinterException | InterruptedException ex) {
            imprime();
        }
    }
}
